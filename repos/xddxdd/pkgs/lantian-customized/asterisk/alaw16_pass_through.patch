diff --git a/include/asterisk/format_cache.h b/include/asterisk/format_cache.h
index 20b9d3afbb..f0218b36eb 100644
--- a/include/asterisk/format_cache.h
+++ b/include/asterisk/format_cache.h
@@ -246,6 +246,11 @@ extern struct ast_format *ast_format_silk12;
 extern struct ast_format *ast_format_silk16;
 extern struct ast_format *ast_format_silk24;
 
+/*!
+ * \brief Built-in PCMA 16 format.
+ */
+extern struct ast_format *ast_format_alaw16;
+
 /*!
  * \brief Initialize format cache support within the core.
  *
diff --git a/main/codec_builtin.c b/main/codec_builtin.c
index bd69d46be1..1da6df3176 100644
--- a/main/codec_builtin.c
+++ b/main/codec_builtin.c
@@ -191,6 +191,20 @@ static struct ast_codec alaw = {
 	.smooth = 1,
 };
 
+static struct ast_codec alaw16 = {
+	.name = "alaw16",
+	.description = "PCMA 16",
+	.type = AST_MEDIA_TYPE_AUDIO,
+	.sample_rate = 16000,
+	.minimum_ms = 10,
+	.maximum_ms = 150,
+	.default_ms = 10,
+	.minimum_bytes = 160,
+	.samples_count = ulaw_samples,
+	.get_length = ulaw_length,
+	.smooth = 1,
+};
+
 static int gsm_samples(struct ast_frame *frame)
 {
 	return 160 * (frame->datalen / 33);
@@ -930,6 +944,7 @@ int ast_codec_builtin_init(void)
 {
 	int res = 0;
 
+	res |= CODEC_REGISTER_AND_CACHE(alaw16);
 	res |= CODEC_REGISTER_AND_CACHE(codec2);
 	res |= CODEC_REGISTER_AND_CACHE(g723);
 	res |= CODEC_REGISTER_AND_CACHE(ulaw);
diff --git a/main/format_cache.c b/main/format_cache.c
index f1a7fdac07..2df1589856 100644
--- a/main/format_cache.c
+++ b/main/format_cache.c
@@ -225,6 +225,11 @@ struct ast_format *ast_format_opus;
  */
 struct ast_format *ast_format_codec2;
 
+/*!
+ * \brief Built-in cached PCMA 16 format.
+ */
+struct ast_format *ast_format_alaw16;
+
 /*!
  * \brief Built-in cached t140 format.
  */
@@ -313,6 +318,7 @@ static void format_cache_shutdown(void)
 	ao2_cleanup(formats);
 	formats = NULL;
 
+	ao2_replace(ast_format_alaw16, NULL);
 	ao2_replace(ast_format_g723, NULL);
 	ao2_replace(ast_format_ulaw, NULL);
 	ao2_replace(ast_format_alaw, NULL);
@@ -384,6 +390,8 @@ static void set_cached_format(const char *name, struct ast_format *format)
 		ao2_replace(ast_format_ulaw, format);
 	} else if (!strcmp(name, "alaw")) {
 		ao2_replace(ast_format_alaw, format);
+	} else if (!strcmp(name, "alaw16")) {
+		ao2_replace(ast_format_alaw16, format);
 	} else if (!strcmp(name, "gsm")) {
 		ao2_replace(ast_format_gsm, format);
 	} else if (!strcmp(name, "g726")) {
diff --git a/main/rtp_engine.c b/main/rtp_engine.c
index eac3a02ed4..0707f6455e 100644
--- a/main/rtp_engine.c
+++ b/main/rtp_engine.c
@@ -3676,6 +3676,8 @@ int ast_rtp_engine_init(void)
 	set_next_mime_type(ast_format_vp8, 0,  "video", "VP8", 90000);
 	set_next_mime_type(ast_format_vp9, 0, "video", "VP9", 90000);
 
+	set_next_mime_type(ast_format_alaw16, 0,  "audio", "PCMA", 16000);
+
 	/* Define the static rtp payload mappings */
 	add_static_payload(0, ast_format_ulaw, 0);
 	#ifdef USE_DEPRECATED_G726
@@ -3719,6 +3721,8 @@ int ast_rtp_engine_init(void)
 	add_static_payload(109, ast_format_h265, 0);
 
 	add_static_payload(110, ast_format_speex, 0);
+
+	add_static_payload(-1, ast_format_alaw16, 0);
 	add_static_payload(111, ast_format_g726, 0);
 	add_static_payload(112, ast_format_g726_aal2, 0);
 
