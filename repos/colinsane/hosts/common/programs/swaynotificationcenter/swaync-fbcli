#!/usr/bin/env nix-shell
#!nix-shell -i bash -p feedbackd -p procps -p swaynotificationcenter

action="$1"
shift
fbcliargs=("$@")

# kill children if killed, to allow that killing this parent process will end the real fbcli call
cleanup() {
  echo "aborting fbcli notification (PID $child)"
  pkill -P "$child"
  exit 0  # exit cleanly to avoid swaync alerting a script failure
}

start() {
  # if in Do Not Disturb, don't do any feedback
  # TODO: better solution is to actually make use of feedbackd profiles.
  #       i.e. set profile to `quiet` when in DnD mode
  if [ "$SWAYNC_URGENCY" != "Critical" ] && [ "$(swaync-client --get-dnd)" = "true" ]; then
    exit
  fi

  trap cleanup SIGINT SIGQUIT SIGTERM

  # feedbackd stops playback when the caller exits
  # and fbcli will exit immediately if it has no stdin.
  # so spoof a stdin.
  # TODO: this maybe pegs CPU at 100% when receiving a call, and never exits?
  /bin/sh -c "true | fbcli ${fbcliargs[*]}" &
  child=$!
  wait
}

stop() {
  pkill -e -f "swaync-fbcli start ${fbcliargs[*]}"
}

case "$action" in
  start)
    start
    ;;
  stop)
    stop
    ;;
esac
