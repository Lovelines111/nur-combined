diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
index b010ec6..8737d2a 100644
--- a/.gitlab-ci.yml
+++ b/.gitlab-ci.yml
@@ -13,10 +13,10 @@ build_linux_release:
   stage: release
   script: cargo build --all-features --release
   after_script:
-    - find target -executable -type f -name 'msyt' -exec strip {} \;
+    - find target -executable -type f -name 'msjt' -exec strip {} \;
   artifacts:
     paths:
-      - target/release/msyt
+      - target/release/msjt
 
 build_win:
   stage: build
@@ -26,10 +26,10 @@ build_win_release:
   stage: release
   script: cargo build --all-features --release --target=x86_64-pc-windows-gnu
   after_script:
-    - find target -executable -type f -name 'msyt.exe' -exec x86_64-w64-mingw32-strip {} \;
+    - find target -executable -type f -name 'msjt.exe' -exec x86_64-w64-mingw32-strip {} \;
   artifacts:
     paths:
-      - target/x86_64-pc-windows-gnu/release/msyt.exe
+      - target/x86_64-pc-windows-gnu/release/msjt.exe
 
 build_linux_musl:
   stage: build
@@ -39,10 +39,10 @@ build_linux_musl_release:
   stage: release
   script: cargo build --all-features --release --target=x86_64-unknown-linux-musl
   after_script:
-    - find target -executable -type f -name 'msyt' -exec strip {} \;
+    - find target -executable -type f -name 'msjt' -exec strip {} \;
   artifacts:
     paths:
-      - target/x86_64-unknown-linux-musl/release/msyt
+      - target/x86_64-unknown-linux-musl/release/msjt
 
 test:
   stage: test
diff --git a/Cargo.lock b/Cargo.lock
index 5908532..1b77365 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -1,487 +1,493 @@
 # This file is automatically @generated by Cargo.
 # It is not intended for manual editing.
+[[package]]
+name = "addr2line"
+version = "0.13.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "1b6a2d3371669ab3ca9797670853d61402b03d0b4b9ebf33d677dfa720203072"
+dependencies = [
+ "gimli",
+]
+
+[[package]]
+name = "adler"
+version = "0.2.3"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ee2a4ec343196209d6594e19543ae87a39f96d5534d7174822a3ad825dd6ed7e"
+
 [[package]]
 name = "ansi_term"
 version = "0.11.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b"
 dependencies = [
- "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)",
-]
-
-[[package]]
-name = "arrayvec"
-version = "0.4.10"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-dependencies = [
- "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)",
+ "winapi",
 ]
 
 [[package]]
 name = "atty"
-version = "0.2.11"
+version = "0.2.14"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8"
 dependencies = [
- "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)",
- "termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)",
- "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)",
+ "hermit-abi",
+ "libc",
+ "winapi",
 ]
 
 [[package]]
 name = "autocfg"
-version = "0.1.2"
+version = "1.0.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a"
 
 [[package]]
 name = "backtrace"
-version = "0.3.14"
+version = "0.3.53"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "707b586e0e2f247cbde68cdd2c3ce69ea7b7be43e1c5b426e37c9319c4b9838e"
 dependencies = [
- "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)",
- "backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)",
- "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)",
- "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)",
- "rustc-demangle 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)",
- "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)",
-]
-
-[[package]]
-name = "backtrace-sys"
-version = "0.1.28"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-dependencies = [
- "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)",
- "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)",
+ "addr2line",
+ "cfg-if",
+ "libc",
+ "miniz_oxide",
+ "object",
+ "rustc-demangle",
 ]
 
 [[package]]
 name = "base64"
-version = "0.10.1"
+version = "0.13.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-dependencies = [
- "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)",
-]
+checksum = "904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd"
 
 [[package]]
 name = "bitflags"
-version = "1.0.4"
+version = "1.2.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693"
 
 [[package]]
 name = "byteorder"
-version = "1.3.1"
+version = "1.3.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "08c48aae112d48ed9f069b33538ea9e3e90aa263cfa3d1c24309612b1f7472de"
 
 [[package]]
 name = "byteordered"
-version = "0.4.0"
+version = "0.4.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "a90ff53bdca087f5c3ebf666edb0aaf3cd17c145b6db177f305407b0370de9a9"
 dependencies = [
- "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)",
+ "byteorder",
 ]
 
-[[package]]
-name = "cc"
-version = "1.0.31"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-
 [[package]]
 name = "cfg-if"
-version = "0.1.7"
+version = "1.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"
 
 [[package]]
 name = "clap"
-version = "2.32.0"
+version = "2.33.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "37e58ac78573c40708d45522f0d80fa2f01cc4f9b4e2bf749807255454312002"
 dependencies = [
- "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)",
- "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)",
- "strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)",
- "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)",
+ "ansi_term",
+ "atty",
+ "bitflags",
+ "strsim",
+ "textwrap",
+ "unicode-width",
+ "vec_map",
+]
+
+[[package]]
+name = "const_fn"
+version = "0.4.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ce90df4c658c62f12d78f7508cf92f9173e5184a539c10bfe54a3107b3ffd0f2"
+
+[[package]]
+name = "crossbeam-channel"
+version = "0.5.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "dca26ee1f8d361640700bde38b2c37d8c22b3ce2d360e1fc1c74ea4b0aa7d775"
+dependencies = [
+ "cfg-if",
+ "crossbeam-utils",
 ]
 
 [[package]]
 name = "crossbeam-deque"
-version = "0.2.0"
+version = "0.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "94af6efb46fef72616855b036a624cf27ba656ffc9be1b9a3c931cfc7749a9a9"
 dependencies = [
- "crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)",
- "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)",
+ "cfg-if",
+ "crossbeam-epoch",
+ "crossbeam-utils",
 ]
 
 [[package]]
 name = "crossbeam-epoch"
-version = "0.3.1"
+version = "0.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ec0f606a85340376eef0d6d8fec399e6d4a544d648386c6645eb6d0653b27d9f"
 dependencies = [
- "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)",
- "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)",
- "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)",
- "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)",
- "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)",
- "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)",
+ "cfg-if",
+ "const_fn",
+ "crossbeam-utils",
+ "lazy_static",
+ "memoffset",
+ "scopeguard",
 ]
 
 [[package]]
 name = "crossbeam-utils"
-version = "0.2.2"
+version = "0.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ec91540d98355f690a86367e566ecad2e9e579f230230eb7c21398372be73ea5"
 dependencies = [
- "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)",
+ "autocfg",
+ "cfg-if",
+ "const_fn",
+ "lazy_static",
 ]
 
-[[package]]
-name = "dtoa"
-version = "0.4.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-
 [[package]]
 name = "either"
-version = "1.5.1"
+version = "1.6.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457"
 
 [[package]]
 name = "failure"
-version = "0.1.5"
+version = "0.1.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d32e9bd16cc02eae7db7ef620b392808b89f6a5e16bb3497d159c6b92a0f4f86"
 dependencies = [
- "backtrace 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)",
- "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)",
+ "backtrace",
+ "failure_derive",
 ]
 
 [[package]]
 name = "failure_derive"
-version = "0.1.5"
+version = "0.1.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "aa4da3c766cd7a0db8242e326e9e4e081edd567072893ed320008189715366a4"
 dependencies = [
- "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)",
- "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)",
- "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)",
- "synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)",
+ "proc-macro2",
+ "quote",
+ "syn",
+ "synstructure",
+]
+
+[[package]]
+name = "gimli"
+version = "0.22.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "aaf91faf136cb47367fa430cd46e37a788775e7fa104f8b4bcb3861dc389b724"
+
+[[package]]
+name = "hashbrown"
+version = "0.9.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d7afe4a420e3fe79967a00898cc1f4db7c8a49a9333a29f8a4bd76a253d5cd04"
+
+[[package]]
+name = "hermit-abi"
+version = "0.1.17"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "5aca5565f760fb5b220e499d72710ed156fdb74e631659e99377d9ebfbd13ae8"
+dependencies = [
+ "libc",
 ]
 
 [[package]]
 name = "indexmap"
-version = "1.0.2"
+version = "1.6.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "55e2e4c765aa53a0424761bf9f41aa7a6ac1efa87238f59560640e27fca028f2"
 dependencies = [
- "serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)",
+ "autocfg",
+ "hashbrown",
+ "serde",
 ]
 
+[[package]]
+name = "itoa"
+version = "0.4.6"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "dc6f3ad7b9d11a0c00842ff8de1b60ee58661048eb8049ed33c73594f359d7e6"
+
 [[package]]
 name = "lazy_static"
-version = "1.3.0"
+version = "1.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"
 
 [[package]]
 name = "libc"
-version = "0.2.50"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-
-[[package]]
-name = "linked-hash-map"
-version = "0.5.2"
+version = "0.2.80"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "4d58d1b70b004888f764dfbf6a26a3b0342a1632d33968e4a179d8011c760614"
 
 [[package]]
 name = "memoffset"
-version = "0.2.1"
+version = "0.5.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "043175f069eda7b85febe4a74abbaeff828d9f8b448515d3151a14a3542811aa"
+dependencies = [
+ "autocfg",
+]
+
+[[package]]
+name = "miniz_oxide"
+version = "0.4.3"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "0f2d26ec3309788e423cfbf68ad1800f061638098d76a83681af979dc4eda19d"
+dependencies = [
+ "adler",
+ "autocfg",
+]
 
 [[package]]
 name = "msbt"
-version = "0.1.0"
-source = "git+https://github.com/jkcclemens/msbt-rs#7bdb5031e57474899cc235f5b1dde96d76e54c12"
+version = "0.1.1"
+source = "git+https://github.com/jkcclemens/msbt-rs#ad4503ed0bf8dc25456c0fd13b5341c3d0d67c8d"
 dependencies = [
- "byteordered 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)",
- "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)",
+ "byteordered",
+ "failure",
+ "failure_derive",
 ]
 
 [[package]]
-name = "msyt"
+name = "msjt"
 version = "1.1.0"
 dependencies = [
- "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)",
- "byteordered 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)",
- "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)",
- "msbt 0.1.0 (git+https://github.com/jkcclemens/msbt-rs)",
- "rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)",
- "serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)",
- "serde_derive 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)",
- "serde_yaml 0.8.8 (registry+https://github.com/rust-lang/crates.io-index)",
- "walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)",
+ "base64",
+ "byteordered",
+ "clap",
+ "failure",
+ "indexmap",
+ "msbt",
+ "rayon",
+ "serde",
+ "serde_derive",
+ "serde_json",
+ "walkdir",
 ]
 
-[[package]]
-name = "nodrop"
-version = "0.1.13"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-
 [[package]]
 name = "num_cpus"
-version = "1.10.0"
+version = "1.13.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3"
 dependencies = [
- "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)",
+ "hermit-abi",
+ "libc",
 ]
 
 [[package]]
-name = "proc-macro2"
-version = "0.4.27"
+name = "object"
+version = "0.21.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "37fd5004feb2ce328a52b0b3d01dbf4ffff72583493900ed15f22d4111c51693"
+
+[[package]]
+name = "proc-macro2"
+version = "1.0.24"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "1e0704ee1a7e00d7bb417d0770ea303c1bccbabf0ef1667dae92b5967f5f8a71"
 dependencies = [
- "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)",
+ "unicode-xid",
 ]
 
 [[package]]
 name = "quote"
-version = "0.6.11"
+version = "1.0.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "aa563d17ecb180e500da1cfd2b028310ac758de548efdd203e18f283af693f37"
 dependencies = [
- "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)",
+ "proc-macro2",
 ]
 
 [[package]]
 name = "rayon"
-version = "1.0.3"
+version = "1.5.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "8b0d8e0819fadc20c74ea8373106ead0600e3a67ef1fe8da56e39b9ae7275674"
 dependencies = [
- "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "either 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)",
- "rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)",
+ "autocfg",
+ "crossbeam-deque",
+ "either",
+ "rayon-core",
 ]
 
 [[package]]
 name = "rayon-core"
-version = "1.4.1"
+version = "1.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "9ab346ac5921dc62ffa9f89b7a773907511cdfa5490c572ae9be1be33e8afa4a"
 dependencies = [
- "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)",
- "num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)",
-]
-
-[[package]]
-name = "redox_syscall"
-version = "0.1.51"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-
-[[package]]
-name = "redox_termios"
-version = "0.1.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-dependencies = [
- "redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)",
+ "crossbeam-channel",
+ "crossbeam-deque",
+ "crossbeam-utils",
+ "lazy_static",
+ "num_cpus",
 ]
 
 [[package]]
 name = "rustc-demangle"
-version = "0.1.13"
+version = "0.1.18"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "6e3bad0ee36814ca07d7968269dd4b7ec89ec2da10c4bb613928d3077083c232"
+
+[[package]]
+name = "ryu"
+version = "1.0.5"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e"
 
 [[package]]
 name = "same-file"
-version = "1.0.4"
+version = "1.0.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"
 dependencies = [
- "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)",
+ "winapi-util",
 ]
 
 [[package]]
 name = "scopeguard"
-version = "0.3.3"
+version = "1.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd"
 
 [[package]]
 name = "serde"
-version = "1.0.89"
+version = "1.0.117"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "b88fa983de7720629c9387e9f517353ed404164b1e482c970a90c1a4aaf7dc1a"
 
 [[package]]
 name = "serde_derive"
-version = "1.0.89"
+version = "1.0.117"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cbd1ae72adb44aab48f325a02444a5fc079349a8d804c1fc922aed3f7454c74e"
 dependencies = [
- "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)",
- "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)",
- "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)",
+ "proc-macro2",
+ "quote",
+ "syn",
 ]
 
 [[package]]
-name = "serde_yaml"
-version = "0.8.8"
+name = "serde_json"
+version = "1.0.59"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "dcac07dbffa1c65e7f816ab9eba78eb142c6d44410f4eeba1e26e4f5dfa56b95"
 dependencies = [
- "dtoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)",
- "linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)",
- "serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)",
- "yaml-rust 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)",
+ "itoa",
+ "ryu",
+ "serde",
 ]
 
 [[package]]
 name = "strsim"
-version = "0.7.0"
+version = "0.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a"
 
 [[package]]
 name = "syn"
-version = "0.15.29"
+version = "1.0.48"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cc371affeffc477f42a221a1e4297aedcea33d47d19b61455588bd9d8f6b19ac"
 dependencies = [
- "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)",
- "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)",
- "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)",
+ "proc-macro2",
+ "quote",
+ "unicode-xid",
 ]
 
 [[package]]
 name = "synstructure"
-version = "0.10.1"
+version = "0.12.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "b834f2d66f734cb897113e34aaff2f1ab4719ca946f9a7358dba8f8064148701"
 dependencies = [
- "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)",
- "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)",
- "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)",
- "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)",
-]
-
-[[package]]
-name = "termion"
-version = "1.5.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-dependencies = [
- "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)",
- "redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)",
- "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)",
+ "proc-macro2",
+ "quote",
+ "syn",
+ "unicode-xid",
 ]
 
 [[package]]
 name = "textwrap"
-version = "0.10.0"
+version = "0.11.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060"
 dependencies = [
- "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)",
+ "unicode-width",
 ]
 
 [[package]]
 name = "unicode-width"
-version = "0.1.5"
+version = "0.1.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3"
 
 [[package]]
 name = "unicode-xid"
-version = "0.1.0"
+version = "0.2.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564"
 
 [[package]]
 name = "vec_map"
-version = "0.8.1"
+version = "0.8.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191"
 
 [[package]]
 name = "walkdir"
-version = "2.2.7"
+version = "2.3.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "777182bc735b6424e1a57516d35ed72cb8019d85c8c9bf536dccb3445c1a2f7d"
 dependencies = [
- "same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)",
- "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)",
- "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)",
+ "same-file",
+ "winapi",
+ "winapi-util",
 ]
 
 [[package]]
 name = "winapi"
-version = "0.3.6"
+version = "0.3.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"
 dependencies = [
- "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)",
+ "winapi-i686-pc-windows-gnu",
+ "winapi-x86_64-pc-windows-gnu",
 ]
 
 [[package]]
 name = "winapi-i686-pc-windows-gnu"
 version = "0.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"
 
 [[package]]
 name = "winapi-util"
-version = "0.1.2"
+version = "0.1.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178"
 dependencies = [
- "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)",
+ "winapi",
 ]
 
 [[package]]
 name = "winapi-x86_64-pc-windows-gnu"
 version = "0.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-
-[[package]]
-name = "yaml-rust"
-version = "0.4.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-dependencies = [
- "linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)",
-]
-
-[metadata]
-"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)" = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b"
-"checksum arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)" = "92c7fb76bc8826a8b33b4ee5bb07a247a81e76764ab4d55e8f73e3a4d8808c71"
-"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)" = "9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652"
-"checksum autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)" = "a6d640bee2da49f60a4068a7fae53acde8982514ab7bae8b8cea9e88cbcfd799"
-"checksum backtrace 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)" = "cd5a90e2b463010cd0e0ce9a11d4a9d5d58d9f41d4a6ba3dcaf9e68b466e88b4"
-"checksum backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)" = "797c830ac25ccc92a7f8a7b9862bde440715531514594a6154e3d4a54dd769b6"
-"checksum base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)" = "0b25d992356d2eb0ed82172f5248873db5560c4721f564b13cb5193bda5e668e"
-"checksum bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)" = "228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12"
-"checksum byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)" = "a019b10a2a7cdeb292db131fc8113e57ea2a908f6e7894b0c3c671893b65dbeb"
-"checksum byteordered 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = "554dfb22b3ba32f7040c952105888689d1cde420d4598520a657b65f51bf5e27"
-"checksum cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)" = "c9ce8bb087aacff865633f0bd5aeaed910fe2fe55b55f4739527f2e023a2e53d"
-"checksum cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)" = "11d43355396e872eefb45ce6342e4374ed7bc2b3a502d1b28e36d6e23c05d1f4"
-"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)" = "b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e"
-"checksum crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)" = "f739f8c5363aca78cfb059edf753d8f0d36908c348f3d8d1503f03d8b75d9cf3"
-"checksum crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)" = "927121f5407de9956180ff5e936fe3cf4324279280001cd56b669d28ee7e9150"
-"checksum crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)" = "2760899e32a1d58d5abb31129f8fae5de75220bc2176e77ff7c627ae45c918d9"
-"checksum dtoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)" = "6d301140eb411af13d3115f9a562c85cc6b541ade9dfa314132244aaee7489dd"
-"checksum either 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)" = "c67353c641dc847124ea1902d69bd753dee9bb3beff9aa3662ecf86c971d1fac"
-"checksum failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)" = "795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2"
-"checksum failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)" = "ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1"
-"checksum indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)" = "7e81a7c05f79578dbc15793d8b619db9ba32b4577003ef3af1a91c416798c58d"
-"checksum lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)" = "bc5729f27f159ddd61f4df6228e827e86643d4d3e7c32183cb30a1c08f604a14"
-"checksum libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)" = "aab692d7759f5cd8c859e169db98ae5b52c924add2af5fbbca11d12fefb567c1"
-"checksum linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)" = "ae91b68aebc4ddb91978b11a1b02ddd8602a05ec19002801c5666000e05e0f83"
-"checksum memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)" = "0f9dc261e2b62d7a622bf416ea3c5245cdd5d9a7fcc428c0d06804dfce1775b3"
-"checksum msbt 0.1.0 (git+https://github.com/jkcclemens/msbt-rs)" = "<none>"
-"checksum nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)" = "2f9667ddcc6cc8a43afc9b7917599d7216aa09c463919ea32c59ed6cac8bc945"
-"checksum num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)" = "1a23f0ed30a54abaa0c7e83b1d2d87ada7c3c23078d1d87815af3e3b6385fbba"
-"checksum proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)" = "4d317f9caece796be1980837fd5cb3dfec5613ebdb04ad0956deea83ce168915"
-"checksum quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)" = "cdd8e04bd9c52e0342b406469d494fcb033be4bdbe5c606016defbb1681411e1"
-"checksum rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)" = "373814f27745b2686b350dd261bfd24576a6fb0e2c5919b3a2b6005f820b0473"
-"checksum rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)" = "b055d1e92aba6877574d8fe604a63c8b5df60f60e5982bf7ccbb1338ea527356"
-"checksum redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)" = "423e376fffca3dfa06c9e9790a9ccd282fafb3cc6e6397d01dbf64f9bacc6b85"
-"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)" = "7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76"
-"checksum rustc-demangle 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)" = "adacaae16d02b6ec37fdc7acfcddf365978de76d1983d3ee22afc260e1ca9619"
-"checksum same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)" = "8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267"
-"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)" = "94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27"
-"checksum serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)" = "92514fb95f900c9b5126e32d020f5c6d40564c27a5ea6d1d7d9f157a96623560"
-"checksum serde_derive 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)" = "bb6eabf4b5914e88e24eea240bb7c9f9a2cbc1bbbe8d961d381975ec3c6b806c"
-"checksum serde_yaml 0.8.8 (registry+https://github.com/rust-lang/crates.io-index)" = "0887a8e097a69559b56aa2526bf7aff7c3048cf627dff781f0b56a6001534593"
-"checksum strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)" = "bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550"
-"checksum syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)" = "1825685f977249735d510a242a6727b46efe914bb67e38d30c071b1b72b1d5c2"
-"checksum synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)" = "73687139bf99285483c96ac0add482c3776528beac1d97d444f6e91f203a2015"
-"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)" = "689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096"
-"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)" = "307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6"
-"checksum unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)" = "882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526"
-"checksum unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)" = "fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc"
-"checksum vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)" = "05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a"
-"checksum walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)" = "9d9d7ed3431229a144296213105a390676cc49c9b6a72bd19f3176c98e129fa1"
-"checksum winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)" = "92c1eb33641e276cfa214a0522acad57be5c56b10cb348b3c5117db75f3ac4b0"
-"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"
-"checksum winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)" = "7168bab6e1daee33b4557efd0e95d5ca70a03706d39fa5f3fe7a236f584b03c9"
-"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)" = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"
-"checksum yaml-rust 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)" = "65923dd1784f44da1d2c3dbbc5e822045628c590ba72123e1c73d3c230c4434d"
+checksum = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"
diff --git a/Cargo.toml b/Cargo.toml
index b8bb6f4..797d188 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -1,19 +1,19 @@
 [package]
-name = "msyt"
+name = "msjt"
 version = "1.1.0"
-authors = ["Kyle Clemens <msyt@kyleclemens.com>"]
-description = "Import and export from MSBT files to MSYT (YAML) files."
+authors = ["Anna Clemens <github@annaclemens.io>"]
+description = "Import and export from MSBT files to MSJT (JSON) files."
 edition = "2018"
 
 [dependencies]
-base64 = "0.10"
-byteordered = "0.4"
-clap = "2"
-failure = "0.1"
-indexmap = { version = "1", features = ["serde", "serde-1"] }
+base64 = "^0.13"
+byteordered = "^0.4"
+clap = "^2"
+failure = "^0.1"
+indexmap = { version = "^1", features = ["serde-1"] }
 msbt = { git = "https://github.com/jkcclemens/msbt-rs" }
-rayon = "1"
-serde = "1"
-serde_derive = "1"
-serde_yaml = "0.8"
-walkdir = "2"
+rayon = "^1"
+serde = "^1"
+serde_derive = "^1"
+serde_json = "^1"
+walkdir = "^2"
diff --git a/README.md b/README.md
index a54e86d..4bf69b8 100644
--- a/README.md
+++ b/README.md
@@ -1,72 +1,72 @@
-# msyt
+# msjt
 
 A human readable and editable format for `msbt` files.
 
-msyt is a YAML format specification for `msbt` files, allowing easy plaintext reading and writing.
-This repo houses a binary used to interface with `msyt` files.
+msjt is a JSON format specification for `msbt` files, allowing easy plaintext reading and writing.
+This repo houses a binary used to interface with `msjt` files.
 
 ---
 
-msyt is unique amongst its `msbt`-editing peers in that it does not require any `msbt` files after
-the initial export. Once an `msyt` file is created, it can be used to create an `msbt` file.
+msjt is unique amongst its `msbt`-editing peers in that it does not require any `msbt` files after
+the initial export. Once an `msjt` file is created, it can be used to create an `msbt` file.
 
 ## Usage
 
 ### Exporting
 
-Use the `export` subcommand to create `msyt` files from `msbt` files.
+Use the `export` subcommand to create `msjt` files from `msbt` files.
 
 #### Examples
 
 See complete usage:
-`msyt export --help`
+`msjt export --help`
 
-Output `msyt` files next to their `msbt` counterparts:  
-`msyt export path/to/file.msbt a/different/file.msbt`
+Output `msjt` files next to their `msbt` counterparts:  
+`msjt export path/to/file.msbt a/different/file.msbt`
 
-Output all `msyt` files next to their `msbt` counterparts recursively in a directory:  
-`msyt export -d path/to/dir/containing/msbt/files`
+Output all `msjt` files next to their `msbt` counterparts recursively in a directory:  
+`msjt export -d path/to/dir/containing/msbt/files`
 
-Output `msyt` files generated from files in `some/dir` into `another/dir`:  
-`msyt export -o another/dir -d some/dir`
+Output `msjt` files generated from files in `some/dir` into `another/dir`:  
+`msjt export -o another/dir -d some/dir`
 
 ### Creating
 
-Use the `create` subcommand to create `msbt` files from `msyt` files.
+Use the `create` subcommand to create `msbt` files from `msjt` files.
 
 #### Examples
 
 See complete usage:  
-`msyt create --help`
+`msjt create --help`
 
-Create `msbt` files next to `msyt` files:  
-`msyt create path/to/file.msyt a/different/file.msyt`
+Create `msbt` files next to `msjt` files:  
+`msjt create path/to/file.msyt a/different/file.msyt`
 
-Create `msbt` files next to all `msyt` files recursively in a directory:  
-`msyt create -d path/to/dir/containing/msyt/files`
+Create `msbt` files next to all `msjt` files recursively in a directory:  
+`msjt create -d path/to/dir/containing/msjt/files`
 
 Create `msbt` files in `some/dir` from files in `another/dir`:  
-`msyt create -o another/dir -d some/dir`
+`msjt create -o another/dir -d some/dir`
 
 ### Importing
 
-Use the `import` subcommand to import a `msyt` into an existing `msbt`.
+Use the `import` subcommand to import a `msjt` into an existing `msbt`.
 
 Note that this will keep the section order and label order. This will *not* add new labels and will not update attributes.
 
 #### Examples
 
 See complete usage:  
-`msyt import --help`
+`msjt import --help`
 
-Import `msyt` files into the `msbt` files adjacent to them:  
-`msyt import path/to/file.msyt another/path/to/file.msyt`
+Import `msjt` files into the `msbt` files adjacent to them:  
+`msjt import path/to/file.msyt another/path/to/file.msyt`
 
-Import `msyt` files adjacent to `msbt` files recursively in a directory:  
-`msyt import -d some/dir`
+Import `msjt` files adjacent to `msbt` files recursively in a directory:  
+`msjt import -d some/dir`
 
-Import `msyt` files adjacent to `msbt` files recursively in a directory, outputting the result in `another/dir`:  
-`msyt import -o another/dir -d some/dir`
+Import `msjt` files adjacent to `msbt` files recursively in a directory, outputting the result in `another/dir`:  
+`msjt import -o another/dir -d some/dir`
 
 ## Building
 
diff --git a/src/cli.rs b/src/cli.rs
index a26aa50..fca31ae 100644
--- a/src/cli.rs
+++ b/src/cli.rs
@@ -13,10 +13,10 @@ pub fn app<'a, 'b: 'a>() -> App<'a, 'b> {
     ])
 
     .subcommand(SubCommand::with_name("import")
-      .about("Import from MSYT files to MSBT files")
+      .about("Import from MSJT files to MSBT files")
 
       .arg(Arg::with_name("dir_mode")
-        .help("Allow specifying directories. msyt will search for all files with the correct extension in the provided directories.")
+        .help("Allow specifying directories. msjt will search for all files with the correct extension in the provided directories.")
         .short("d")
         .long("directories")
         .alias("directory"))
@@ -42,14 +42,14 @@ pub fn app<'a, 'b: 'a>() -> App<'a, 'b> {
         .takes_value(true))
 
       .arg(Arg::with_name("paths")
-        .help("MSYT paths to import (MSBT files should be adjacent)")
+        .help("MSJT paths to import (MSBT files should be adjacent)")
         .required(true)
         .multiple(true)))
     .subcommand(SubCommand::with_name("create")
-      .about("Create a MSBT file from a MSYT file")
+      .about("Create a MSBT file from a MSJT file")
 
       .arg(Arg::with_name("dir_mode")
-        .help("Allow specifying directories. msyt will search for all files with the correct extension in the provided directories.")
+        .help("Allow specifying directories. msjt will search for all files with the correct extension in the provided directories.")
         .short("d")
         .long("directories")
         .alias("directory"))
@@ -93,14 +93,14 @@ pub fn app<'a, 'b: 'a>() -> App<'a, 'b> {
         .required(true))
 
       .arg(Arg::with_name("paths")
-        .help("MSYT paths to create MSBT files from")
+        .help("MSJT paths to create MSBT files from")
         .required(true)
         .multiple(true)))
     .subcommand(SubCommand::with_name("export")
-      .about("Export from MSBT files to MSYT files")
+      .about("Export from MSBT files to MSJT files")
 
       .arg(Arg::with_name("dir_mode")
-        .help("Allow specifying directories. msyt will search for all files with the correct extension in the provided directories.")
+        .help("Allow specifying directories. msjt will search for all files with the correct extension in the provided directories.")
         .short("d")
         .long("directories")
         .alias("directory"))
diff --git a/src/model.rs b/src/model.rs
index 2f4d818..f9a2f55 100644
--- a/src/model.rs
+++ b/src/model.rs
@@ -11,7 +11,7 @@ use serde_derive::{Deserialize, Serialize};
 use std::collections::BTreeMap;
 
 #[derive(Debug, Deserialize, Serialize)]
-pub struct Msyt {
+pub struct Msjt {
   #[serde(flatten)]
   pub msbt: MsbtInfo,
   pub entries: IndexMap<String, Entry>,
diff --git a/src/subcommand/create.rs b/src/subcommand/create.rs
index 6fe4b18..c90322d 100644
--- a/src/subcommand/create.rs
+++ b/src/subcommand/create.rs
@@ -15,7 +15,7 @@ use std::{
 
 use crate::{
   Result,
-  model::{Msyt, Content},
+  model::{Msjt, Content},
   subcommand::find_files,
 };
 
@@ -50,40 +50,40 @@ pub fn create(matches: &ArgMatches) -> Result<()> {
   paths
     .into_par_iter()
     .map(|path| {
-      let msyt_file = File::open(&path).with_context(|_| format!("could not open file {}", path.to_string_lossy()))?;
-      let msyt: Msyt = serde_yaml::from_reader(BufReader::new(msyt_file))
-        .with_context(|_| format!("could not read valid yaml from {}", path.to_string_lossy()))?;
+      let msjt_file = File::open(&path).with_context(|_| format!("could not open file {}", path.to_string_lossy()))?;
+      let msjt: Msjt = serde_json::from_reader(BufReader::new(msjt_file))
+        .with_context(|_| format!("could not read valid json from {}", path.to_string_lossy()))?;
 
-      let mut builder = MsbtBuilder::new(endianness, encoding, Some(msyt.msbt.group_count));
-      if let Some(unknown_bytes) = msyt.msbt.ato1 {
+      let mut builder = MsbtBuilder::new(endianness, encoding, Some(msjt.msbt.group_count));
+      if let Some(unknown_bytes) = msjt.msbt.ato1 {
         builder = builder.ato1(msbt::section::Ato1::new_unlinked(unknown_bytes));
       }
-      if let Some(unknown_1) = msyt.msbt.atr1_unknown {
+      if let Some(unknown_1) = msjt.msbt.atr1_unknown {
         // ATR1 should have exactly the same amount of entries as TXT2. In the BotW files, sometimes
         // an ATR1 section is specified to have that amount but the section is actually empty. For
-        // msyt's purposes, if the msyt does not contain the same amount of attributes as it does
+        // msjt's purposes, if the msjt does not contain the same amount of attributes as it does
         // text entries (i.e. not every label has an `attributes` node), it will be assumed that the
         // ATR1 section should specify that it has the correct amount of entries but actually be
         // empty.
-        let strings: Option<Vec<String>> = msyt.entries
+        let strings: Option<Vec<String>> = msjt.entries
           .iter()
           .map(|(_, e)| e.attributes.clone())
           .map(|s| s.map(crate::util::append_nul))
           .collect();
         let atr_len = match strings {
           Some(ref s) => s.len(),
-          None => msyt.entries.len(),
+          None => msjt.entries.len(),
         };
         let strings = strings.unwrap_or_default();
         builder = builder.atr1(msbt::section::Atr1::new_unlinked(atr_len as u32, unknown_1, strings));
       }
-      if let Some(unknown_bytes) = msyt.msbt.tsy1 {
+      if let Some(unknown_bytes) = msjt.msbt.tsy1 {
         builder = builder.tsy1(msbt::section::Tsy1::new_unlinked(unknown_bytes));
       }
-      if let Some(nli1) = msyt.msbt.nli1 {
+      if let Some(nli1) = msjt.msbt.nli1 {
         builder = builder.nli1(msbt::section::Nli1::new_unlinked(nli1.id_count, nli1.global_ids));
       }
-      for (label, entry) in msyt.entries.into_iter() {
+      for (label, entry) in msjt.entries.into_iter() {
         let new_val = Content::write_all(builder.header(), &entry.contents)?;
         builder = builder.add_label(label, new_val);
       }
diff --git a/src/subcommand/export.rs b/src/subcommand/export.rs
index 4a57485..bf4d31d 100644
--- a/src/subcommand/export.rs
+++ b/src/subcommand/export.rs
@@ -12,7 +12,7 @@ use std::{
 
 use crate::{
   Result,
-  model::{MsbtInfo, Msyt, Entry},
+  model::{MsbtInfo, Msjt, Entry},
   subcommand::find_files,
 };
 
@@ -64,7 +64,7 @@ pub fn export(matches: &ArgMatches) -> Result<()> {
 
       entries.sort_keys();
 
-      let msyt = Msyt {
+      let msjt = Msjt {
         entries,
         msbt: MsbtInfo {
           group_count: lbl1.group_count(),
@@ -93,10 +93,10 @@ pub fn export(matches: &ArgMatches) -> Result<()> {
           .with_context(|_| format!("could not create parent directories for {}", parent.to_string_lossy()))?;
       }
       let mut writer = BufWriter::new(File::create(dest)?);
-      serde_yaml::to_writer(
+      serde_json::to_writer(
         &mut writer,
-        &msyt,
-      ).with_context(|_| "could not write yaml to file")?;
+        &msjt,
+      ).with_context(|_| "could not write json to file")?;
       // add final newline
       writer.write_all(b"\n").with_context(|_| "could not write final newline to file")?;
 
diff --git a/src/subcommand/import.rs b/src/subcommand/import.rs
index b568eca..977adf9 100644
--- a/src/subcommand/import.rs
+++ b/src/subcommand/import.rs
@@ -10,7 +10,7 @@ use std::{
 
 use crate::{
   Result,
-  model::{Msyt, Content},
+  model::{Msjt, Content},
   subcommand::find_files,
 };
 
@@ -29,15 +29,15 @@ pub fn import(matches: &ArgMatches) -> Result<()> {
   paths
     .into_par_iter()
     .map(|path| {
-      let msyt_file = File::open(&path)?;
-      let msyt: Msyt = serde_yaml::from_reader(BufReader::new(msyt_file))?;
+      let msjt_file = File::open(&path)?;
+      let msjt: Msjt = serde_json::from_reader(BufReader::new(msjt_file))?;
 
       let msbt_path = path.with_extension("msbt");
       let msbt_file = File::open(&msbt_path)?;
 
       let mut msbt = Msbt::from_reader(BufReader::new(msbt_file))?;
 
-      for (key, entry) in msyt.entries {
+      for (key, entry) in msjt.entries {
         let new_val = Content::write_all(msbt.header(), &entry.contents)?;
         if let Some(ref mut lbl1) = msbt.lbl1_mut() {
           if let Some(label) = lbl1.labels_mut().iter_mut().find(|x| x.name() == key) {
diff --git a/test.sh b/test.sh
index 26c3ef3..d577b11 100755
--- a/test.sh
+++ b/test.sh
@@ -34,7 +34,7 @@ check_diffs() {
 }
 
 main() {
-  [[ "$CI_JOB_ID" != "" ]] && cp target/release/msyt /usr/local/bin/
+  [[ "$CI_JOB_ID" != "" ]] && cp target/release/msjt /usr/local/bin/
 
   # make temp dir
   tmp=$(mktemp -d)
@@ -78,18 +78,18 @@ main() {
   # remove archive
   rm ./*_language_msbts.tar.xz
 
-  # generate msyts
-  echo "generating switch msyts"
-  msyt export -d switch
-  echo "generating wiiu msyts"
-  msyt export -d wiiu
+  # generate msjts
+  echo "generating switch msjts"
+  msjt export -d switch
+  echo "generating wiiu msjts"
+  msjt export -d wiiu
 
   # generate switch msbts
   echo "creating switch msbts"
-  msyt create -dp switch -o msbt_switch switch
+  msjt create -dp switch -o msbt_switch switch
   # generate wiiu msbts
   echo "creating wiiu msbts"
-  msyt create -dp wiiu -o msbt_wiiu wiiu
+  msjt create -dp wiiu -o msbt_wiiu wiiu
 
   # check that switch msbts are functionally equivalent to vanilla
   echo "comparing switch msbts"
