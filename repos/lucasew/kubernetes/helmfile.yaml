# helm install ingress nginx-stable/nginx-ingress --set controller.service.type=NodePort --set controller.service.httpPort.nodePort=30001

repositories:
  - name: nginx-stable
    url: https://helm.nginx.com/stable
  - name: kubernetes-dashboard
    url: https://kubernetes.github.io/dashboard
  - name: weave-scope
    url: https://dasmeta.github.io/helm/
  - name: jenkins-x
    url: https://jenkins-x-charts.github.io/v2/
commonLabels:
  repo: github:lucasew/nixcfg
releases:
  - name: apache-ingress-test
    namespace: app-apache-test
    createNamespace: true
    chart: jenkins-x/empty
    values:
      - resources:
        - apiVersion: v1
          kind: Namespace
          metadata:
            name: apache-ingress-test
        - apiVersion: v1
          kind: Pod
          metadata:
            name: httpd-teste
            labels:
              app.kubernetes.io/name: httpd-teste
              app: httpd-teste
          spec:
            containers:
            - name: httpd-teste
              image: httpd
              ports:
                - containerPort: 80
                  protocol: TCP
                  name: http
        - apiVersion: v1
          kind: Service
          metadata:
            name: httpd-teste-service
          spec:
            selector:
              app: httpd-teste
            ports:
            - name: http
              protocol: TCP
              port: 80
              targetPort: 80
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: httpd-teste-ingress
            annotations:
              kubernetes.io/ingress.class: nginx
          spec:
            rules:
            - host: teste.whiterun.lucao.net
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: httpd-teste-service
                        port:
                          number: 80
  - name: traefik-ingress-test
    namespace: app-traefik-test
    createNamespace: true
    chart: jenkins-x/empty
    values:
      - resources:
        - apiVersion: v1
          kind: Namespace
          metadata:
            name: traefik-ingress-test
        - apiVersion: v1
          kind: Pod
          metadata:
            name: httpd-teste
            labels:
              app.kubernetes.io/name: httpd-teste
              app: httpd-teste
          spec:
            containers:
            - name: httpd-teste
              image: traefik
              args:
                - traefik
                - --accesslog=true
                - --api.dashboard=true
                - --api.insecure=true
              ports:
                - containerPort: 80
                  protocol: TCP
                  name: http
                - containerPort: 8080
                  protocol: TCP
                  name: httpadm
        - apiVersion: v1
          kind: Service
          metadata:
            name: httpd-teste-service
          spec:
            selector:
              app: httpd-teste
            ports:
            - name: http
              protocol: TCP
              port: 80
              targetPort: 80
            - name: httpadm
              protocol: TCP
              port: 8080
              targetPort: 8080
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: httpd-teste-ingress
            annotations:
              kubernetes.io/ingress.class: nginx
          spec:
            rules:
            - host: traefik.whiterun.lucao.net
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: httpd-teste-service
                        port:
                          number: 80
            - host: traefik-admin.whiterun.lucao.net
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: httpd-teste-service
                        port:
                          number: 8080
  - name: ingress
    chart: nginx-stable/nginx-ingress
    namespace: nginx-ingress
    createNamespace: true
    set:
      - name: controller.service.type
        value: ClusterIP
    atomic: true
    strategicMergePatches:
      - apiVersion: v1
        kind: Service
        # name: ingress-nginx-ingress
        metadata:
          namespace: nginx-ingress
          name: ingress-nginx-ingress
        spec:
          clusterIP: 10.0.0.253
  - name: kubernetes-dashboard
    chart: kubernetes-dashboard/kubernetes-dashboard
    namespace: app-kubernetes-dashboard
    createNamespace: true
    values:
      - ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
          hosts:
            - kubernetes-dashboard.whiterun.lucao.net
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: kubernetes-dashboard
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
        - kind: ServiceAccount
          name: kubernetes-dashboard
    strategicMergePatches:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: kubernetes-dashboard
        spec:
          # selector:
          #   app: ingress-nginx-ingress
          template:
            spec:
              containers:
                - name: kubernetes-dashboard
                  args:
                  - --enable-insecure-login
                  - --enable-skip-login
                  - --namespace=app-kubernetes-dashboard
                  - --disable-settings-authorizer
                  - --insecure-bind-address=0.0.0.0
                  - --port=6969
                  - --insecure-port=8443
                  livenessProbe:
                    httpGet:
                      scheme: HTTP
      - apiVersion: v1
        kind: Service
        metadata:
          name: kubernetes-dashboard
        spec:
          ports:
          - name: http
            port: 80
            targetPort: 8443
