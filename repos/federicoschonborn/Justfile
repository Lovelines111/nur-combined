just := just_executable()

system := env("SYSTEM", arch() + "-" + if os() =~ "macos|ios" { "darwin" } else { os() })

export NIX_BUILD_FLAGS := env("NIX_BUILD_FLAGS", "")

[private]
@default:
    {{ just }} --list

# Build all packages.
build-all:
    @env NIX_BUILD_FLAGS="$NIX_BUILD_FLAGS --no-link" {{ just }} build $(nix flake show --json 2>/dev/null | jq -r '.packages."{{ system }}" | keys[]')

# Build all packages against the stable channel.
build-all-stable:
    @env NIX_BUILD_FLAGS="$NIX_BUILD_FLAGS --override-input nixpkgs github:NixOS/nixpkgs/nixos-23.11" {{ just }} build-all

# Build one or more packages.
build +PACKAGES:
    PACKAGES="{{ PACKAGES }}"; nom build -L ${NIX_BUILD_FLAGS[@]} $(echo ".#${PACKAGES// / .#}")

# Build one or more packages against the stable channel.
build-stable +PACKAGES:
    @env NIX_BUILD_FLAGS="$NIX_BUILD_FLAGS --override-input nixpkgs github:NixOS/nixpkgs/nixos-23.11" {{ just }} build {{ PACKAGES }}

tree PACKAGE: (build PACKAGE)
    nix-tree ".#{{ PACKAGE }}"
