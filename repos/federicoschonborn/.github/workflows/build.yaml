name: Build and Populate Cache

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    # Everyday at 03:55
    - cron: 55 3 * * *

env:
  NUR_REPO: federicoschonborn
  CACHIX_NAME: federicoschonborn

jobs:
  build:
    name: Build (${{ matrix.system }} Â· ${{ matrix.channel }})
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            system: x86_64-linux
            channel: nixos-unstable
          - os: ubuntu-latest
            system: x86_64-linux
            channel: nixos-23.05
          - os: ubuntu-latest
            system: x86_64-linux
            channel: nixpkgs-unstable
          - os: macos-latest
            system: x86_64-darwin
            channel: nixpkgs-unstable
          - os: macos-latest
            system: x86_64-darwin
            channel: nixpkgs-23.05-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:${{ matrix.channel }}
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Show nixpkgs version
        run: nix-instantiate --eval -E "(import <nixpkgs> {}).lib.version"

      - name: Setup cachix
        uses: cachix/cachix-action@v12
        with:
          name: ${{ env.CACHIX_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
            -I $PWD

      - name: Build nix packages
        run: nix shell -f "<nixpkgs>" nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs -build-flags "-L"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger NUR update
        run: curl -XPOST https://nur-update.herokuapp.com/update?repo=${{ env.NUR_REPO }}
